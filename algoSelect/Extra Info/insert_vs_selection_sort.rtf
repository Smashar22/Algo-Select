{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Insertion Vs Selection Sort:\
\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
Also it depends on what you're doing. Are you simply taking a list and sorting it? Or are you keeping a list sorted when adding to it? If the latter, Insertion is definitely preferred ...\
\
But ...\
\
You need to consider the cost of swaps against inserts. E.g. an insert into a linked list is O(1) once you've got the position, but when using an array it's O(N) even after finding the position. Thus a selection sort is the better alternative when using an array, while an insertion sort might perform better when using a linked list.}